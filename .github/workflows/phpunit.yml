name: PHPUnit Tests

on:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  # Quick validation job for PRs - runs first and fast
  quick-test:
    name: "Quick Tests (PHP 8.1, WP Latest)"
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') && github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mariadb:10.11
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: wordpress
          MARIADB_INITDB_SKIP_TZINFO: 1
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
          MYSQL_DATABASE: wordpress_test
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: none
          ini-values: opcache.enable_cli=1, opcache.jit=tracing, opcache.jit_buffer_size=64M
          tools: composer, phpunit:9
        env:
          fail-fast: 'true'

      - name: Validate composer.json
        run: composer validate --strict

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-${{ runner.os }}-

      - name: Oauth Composer authentication
        run: composer config -g github-oauth.github.com ${{ secrets.DEVOPS_TOKEN }}
        if: ${{ secrets.DEVOPS_TOKEN }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

      - name: Install additional dependencies
        run: composer require woocommerce/action-scheduler --no-update

      - name: Set up WordPress and WordPress Test Library
        uses: bainternet/setup-wordpress-test-library@master
        with:
          version: 'latest'

      - name: Verify MariaDB connection
        run: |
          while ! mysqladmin ping -h 127.0.0.1 -P ${{ job.services.mysql.ports[3306] }} --silent; do
            sleep 1
          done
        timeout-minutes: 1

      - name: Run PHPUnit tests
        run: |
          phpunit --testsuite hello-plus --order-by=random --stop-on-failure
        env:
          WP_TESTS_DIR: /tmp/wordpress-tests-lib
          WP_TESTS_ELEMENTOR_DIR: ./tmp/elementor/elementor.php

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: phpunit-results-quick
          path: test-results/
          retention-days: 3

  # Comprehensive test matrix - runs after quick test passes
  comprehensive-tests:
    name: "WP ${{ matrix.wp }}, PHP: ${{ matrix.php }}, MS: ${{ matrix.ms }}"
    needs: quick-test
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') && (github.event_name == 'push' || github.event.pull_request.draft == false) }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php: [7.4, 8.0, 8.1, 8.2, 8.3]
        wp: [6.6.x, latest, nightly]
        ms: [no, yes]
        coverage: [no]
        phpunit: [9]
        include:
          # PHP 7.4 compatibility with older PHPUnit
          - phpunit: 7
            php: 7.4
            wp: 6.6.x
            ms: no
            coverage: no
          # Coverage job
          - coverage: yes
            php: 8.1
            wp: latest
            ms: no
            phpunit: 9
        exclude:
          # Skip some combinations for faster CI on PRs
          - php: 7.4
            wp: nightly
          - php: 8.3
            wp: 6.6.x
          # Reduce multisite combinations for PRs
          - ms: yes
            wp: nightly
            php: 7.4
          - ms: yes
            wp: nightly
            php: 8.0

    services:
      mysql:
        image: mariadb:10.11
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: wordpress
          MARIADB_INITDB_SKIP_TZINFO: 1
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
          MYSQL_DATABASE: wordpress_test
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Matrix variables
        id: matrix
        run: |
          echo "::group::Matrix variables"
          echo "PHP version = ${{ matrix.php }}"
          echo "WordPress = ${{ matrix.wp }}"
          echo "Multisite = ${{ matrix.ms }}"
          echo "Coverage = ${{ matrix.coverage }}"
          echo "PHPUnit = ${{ matrix.phpunit }}"
          echo "::endgroup::"

      - name: Decide whether to enable coverage
        id: coverage
        run: |
          if [ "${{ matrix.coverage }}" = "yes" ]; then
            echo "coverage=pcov" >> $GITHUB_OUTPUT
            echo 'ini=pcov.directory=., pcov.exclude="~/(vendor|tests|node_modules|tmp)/~"' >> $GITHUB_OUTPUT
          else
            echo "coverage=none" >> $GITHUB_OUTPUT
            echo "ini=opcache.enable_cli=1, opcache.jit=tracing, opcache.jit_buffer_size=64M" >> $GITHUB_OUTPUT
          fi

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: ${{ steps.coverage.outputs.coverage }}
          ini-values: ${{ steps.coverage.outputs.ini }}
          php-version: ${{ matrix.php }}
          tools: composer, phpunit:${{ matrix.phpunit }}
        env:
          fail-fast: 'true'

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ runner.os }}-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php }}-
            composer-${{ runner.os }}-

      - name: Oauth Composer authentication
        run: composer config -g github-oauth.github.com ${{ secrets.DEVOPS_TOKEN }}
        if: ${{ secrets.DEVOPS_TOKEN }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

      - name: Install additional dependencies
        run: composer require woocommerce/action-scheduler --no-update

      - name: Set up WordPress and WordPress Test Library
        uses: bainternet/setup-wordpress-test-library@master
        with:
          version: ${{ matrix.wp }}

      - name: Set up multisite mode
        run: echo "WP_MULTISITE=1" >> $GITHUB_ENV
        if: matrix.ms == 'yes'

      - name: Update wp-test-config.php for PHP compatibility
        run: |
          if php -r 'exit(PHP_VERSION_ID < 80100);'; then
            echo "Disabling WP_DEBUG in wp-test-config.php for PHP < 8.1"
            sed -i "s@define( 'WP_DEBUG', true );@// define( 'WP_DEBUG', true );@" /tmp/wordpress-tests-lib/wp-tests-config.php
          fi

      - name: Verify MariaDB connection
        run: |
          while ! mysqladmin ping -h 127.0.0.1 -P ${{ job.services.mysql.ports[3306] }} --silent; do
            sleep 1
          done
        timeout-minutes: 1

      - name: Run PHPUnit tests
        run: |
          OPTIONS=""
          if [ "${{ steps.coverage.outputs.coverage }}" != 'none' ]; then
            OPTIONS="$OPTIONS --coverage-clover=clover.xml --coverage-html=coverage-report"
          fi
          phpunit --testsuite hello-plus --order-by=random ${OPTIONS}
        env:
          WP_TESTS_DIR: /tmp/wordpress-tests-lib
          WP_TESTS_ELEMENTOR_DIR: ./tmp/elementor/elementor.php

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: clover.xml
          flags: unittests
          name: php-${{ matrix.php }}-wp-${{ matrix.wp }}
          fail_ci_if_error: false
        if: ${{ steps.coverage.outputs.coverage != 'none' }}

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-php-${{ matrix.php }}-wp-${{ matrix.wp }}
          path: coverage-report/
          retention-days: 7
        if: ${{ steps.coverage.outputs.coverage != 'none' }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: phpunit-results-php-${{ matrix.php }}-wp-${{ matrix.wp }}-ms-${{ matrix.ms }}
          path: test-results/
          retention-days: 3

  # Status check job that other workflows can depend on
  phpunit-status:
    name: PHPUnit Status Check
    runs-on: ubuntu-latest
    needs: [quick-test, comprehensive-tests]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.quick-test.result }}" != "success" ]; then
            echo "❌ Quick tests failed"
            exit 1
          fi
          
          if [ "${{ needs.comprehensive-tests.result }}" != "success" ] && [ "${{ needs.comprehensive-tests.result }}" != "skipped" ]; then
            echo "❌ Comprehensive tests failed"
            exit 1
          fi
          
          echo "✅ All PHPUnit tests passed successfully"

      - name: Set status
        run: |
          echo "PHPUnit tests completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "- Quick tests: ${{ needs.quick-test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Comprehensive tests: ${{ needs.comprehensive-tests.result }}" >> $GITHUB_STEP_SUMMARY
